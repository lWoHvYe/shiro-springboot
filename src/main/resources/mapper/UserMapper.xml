<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.shiro.shiro2spboot.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.springboot.shiro.shiro2spboot.entity.User">
    <!--@mbg.generated-->
    <!--@Table user-->
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    `uid`, `name`, `password`, salt, `state`, username, role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user
    where `uid` = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from user
    where `uid` = #{uid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="uid" keyProperty="uid" parameterType="com.springboot.shiro.shiro2spboot.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user (`name`, `password`, salt, 
      `state`, username, role_id
      )
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{username,jdbcType=VARCHAR}, #{roleId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" keyColumn="uid" keyProperty="uid" parameterType="com.springboot.shiro.shiro2spboot.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.shiro.shiro2spboot.entity.User">
    <!--@mbg.generated-->
    update user
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.shiro.shiro2spboot.entity.User">
    <!--@mbg.generated-->
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT},
      username = #{username,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=BIGINT}
    where `uid` = #{uid,jdbcType=BIGINT}
  </update>

<!--auto generated by MybatisCodeHelper on 2019-11-12-->
  <select id="selectByAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            <if test="uid != null">
                and `uid`=#{uid,jdbcType=BIGINT}
            </if>
            <if test="username != null">
                and username=#{username,jdbcType=VARCHAR}
            </if>
            <if test="name != null">
                and `name`=#{name,jdbcType=VARCHAR}
            </if>
            <if test="password != null">
                and `password`=#{password,jdbcType=VARCHAR}
            </if>
            <if test="salt != null">
                and salt=#{salt,jdbcType=VARCHAR}
            </if>
            <if test="state != null">
                and `state`=#{state,jdbcType=TINYINT}
            </if>
            <if test="roleId != null">
                and role_id=#{roleId,jdbcType=BIGINT}
            </if>
        </where>
    </select>
</mapper>