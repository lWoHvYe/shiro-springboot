spring.profiles.active=dev
#指定服务端口号，与另一层端口号需不一致
server.port=8080
server.http2.enabled=true
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
# 不要设置过大，如果过大，启动项目会报错：打开文件数过多
server.undertow.io-threads= 6
# 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
# 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
server.undertow.worker-threads= 48
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
#server.undertow.buffer-size= 1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
#server.undertow.buffers-per-region= 1024
# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers= true
# Spring boot application
spring.application.name=dubbo-consumer
# Base packages to scan Dubbo Component: @org.apache.dubbo.config.annotation.Service
dubbo.scan.base-packages=com.lwohvye.springboot.dubboprovider.serviceimpl
# Dubbo Application
## The default value of dubbo.application.name is ${spring.application.name}
## dubbo.application.name=${spring.application.name}
embedded.zookeeper.port=2181
# Dubbo Protocol
dubbo.protocol.name=dubbo
## Random port
dubbo.protocol.port=-1
## Dubbo Registry
dubbo.registry.address=zookeeper://192.168.0.145:${embedded.zookeeper.port}
dubbo.registry.file=${user.home}/dubbo-cache/${spring.application.name}/dubbo.cache
#以下两个用于解决连zookeeper报错
dubbo.config-center.timeout=50000
dubbo.registry.timeout=40000
#consumer的timeout属性优先级高于provider的timeout属性，所以配置consumer的，当前为30s，可根据需要调整
dubbo.consumer.timeout=30000
#dubbo.provider.timeout=
## Service version
lwohvye.service.version=1.0.0
#server.servlet.context-path=/shiro2spboot
#logging.level.root=WARN
#logging.level.org.springframework.web=DEBUG
#logging.level.org.mybatis=ERROR
#logging.file=${CATALINA_HOME}/logs/shiro2springboot.log
#logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n
#logging.pattern.file=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n
logging.config=classpath:logback-spring.xml
#输出mapper.xml中sql
#logging.level.com.springboot.shiro.shiro2spboot.dao=debug
#暂时解决同一服务器上多springboot项目报错问题，需进一步解决
spring.jmx.enabled=false
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
#thymeleaf
#spring.thymeleaf.cache=false
#spring.thymeleaf.mode=HTML
#spring.main.allow-bean-definition-overriding=true
#整合redis，使用lettuce client
spring.redis.database=0
spring.redis.host=192.168.0.145
spring.redis.port=6380
spring.redis.password=redis
spring.redis.lettuce.pool.max-active=10
spring.redis.lettuce.pool.max-wait=-1
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0
spring.redis.timeout=1000
#springboot-2.2 新增全局延迟初始化配置，配置后导致PageHelper分页插件失效，需注意
#spring.main.lazy-initialization=true
#配置是否使用swagger
swagger.enable=true

